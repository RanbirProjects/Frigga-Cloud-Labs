{"ast":null,"code":"var _jsxFileName = \"/Users/ranbirsingh/Desktop/figga cloud labs project/frontend/src/contexts/DocumentContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer } from 'react';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DocumentContext = /*#__PURE__*/createContext();\nconst initialState = {\n  documents: [],\n  currentDocument: null,\n  loading: false,\n  error: null,\n  pagination: {\n    current: 1,\n    pages: 1,\n    hasNext: false,\n    hasPrev: false\n  }\n};\nconst documentReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    case 'GET_DOCUMENTS_SUCCESS':\n      return {\n        ...state,\n        documents: action.payload.data,\n        pagination: action.payload.pagination,\n        loading: false,\n        error: null\n      };\n    case 'GET_DOCUMENT_SUCCESS':\n      return {\n        ...state,\n        currentDocument: action.payload,\n        loading: false,\n        error: null\n      };\n    case 'CREATE_DOCUMENT_SUCCESS':\n      return {\n        ...state,\n        documents: [action.payload, ...state.documents],\n        currentDocument: action.payload,\n        loading: false,\n        error: null\n      };\n    case 'UPDATE_DOCUMENT_SUCCESS':\n      return {\n        ...state,\n        documents: state.documents.map(doc => doc._id === action.payload._id ? action.payload : doc),\n        currentDocument: action.payload,\n        loading: false,\n        error: null\n      };\n    case 'DELETE_DOCUMENT_SUCCESS':\n      return {\n        ...state,\n        documents: state.documents.filter(doc => doc._id !== action.payload),\n        currentDocument: null,\n        loading: false,\n        error: null\n      };\n    case 'SEARCH_DOCUMENTS_SUCCESS':\n      return {\n        ...state,\n        documents: action.payload.data,\n        loading: false,\n        error: null\n      };\n    case 'SHARE_DOCUMENT_SUCCESS':\n      return {\n        ...state,\n        currentDocument: action.payload,\n        loading: false,\n        error: null\n      };\n    case 'CLEAR_CURRENT_DOCUMENT':\n      return {\n        ...state,\n        currentDocument: null\n      };\n    default:\n      return state;\n  }\n};\nexport const DocumentProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(documentReducer, initialState);\n\n  // Get all documents\n  const getDocuments = async (page = 1, limit = 10) => {\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n    try {\n      const res = await axios.get(`/api/documents?page=${page}&limit=${limit}`);\n      dispatch({\n        type: 'GET_DOCUMENTS_SUCCESS',\n        payload: {\n          data: res.data.data,\n          pagination: res.data.pagination\n        }\n      });\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to fetch documents';\n      dispatch({\n        type: 'SET_ERROR',\n        payload: message\n      });\n      toast.error(message);\n    }\n  };\n\n  // Get single document\n  const getDocument = async id => {\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n    try {\n      const res = await axios.get(`/api/documents/${id}`);\n      dispatch({\n        type: 'GET_DOCUMENT_SUCCESS',\n        payload: res.data.data\n      });\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to fetch document';\n      dispatch({\n        type: 'SET_ERROR',\n        payload: message\n      });\n      toast.error(message);\n    }\n  };\n\n  // Create document\n  const createDocument = async formData => {\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n    try {\n      const res = await axios.post('/api/documents', formData);\n      dispatch({\n        type: 'CREATE_DOCUMENT_SUCCESS',\n        payload: res.data.data\n      });\n      toast.success('Document created successfully!');\n      return {\n        success: true,\n        document: res.data.data\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Failed to create document';\n      dispatch({\n        type: 'SET_ERROR',\n        payload: message\n      });\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n\n  // Update document\n  const updateDocument = async (id, formData) => {\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n    try {\n      const res = await axios.put(`/api/documents/${id}`, formData);\n      dispatch({\n        type: 'UPDATE_DOCUMENT_SUCCESS',\n        payload: res.data.data\n      });\n      toast.success('Document updated successfully!');\n      return {\n        success: true,\n        document: res.data.data\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const message = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Failed to update document';\n      dispatch({\n        type: 'SET_ERROR',\n        payload: message\n      });\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n\n  // Delete document\n  const deleteDocument = async id => {\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n    try {\n      await axios.delete(`/api/documents/${id}`);\n      dispatch({\n        type: 'DELETE_DOCUMENT_SUCCESS',\n        payload: id\n      });\n      toast.success('Document deleted successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      const message = ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Failed to delete document';\n      dispatch({\n        type: 'SET_ERROR',\n        payload: message\n      });\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n\n  // Search documents\n  const searchDocuments = async query => {\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n    try {\n      const res = await axios.get(`/api/documents/search?q=${encodeURIComponent(query)}`);\n      dispatch({\n        type: 'SEARCH_DOCUMENTS_SUCCESS',\n        payload: res.data\n      });\n    } catch (error) {\n      var _error$response6, _error$response6$data;\n      const message = ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || 'Search failed';\n      dispatch({\n        type: 'SET_ERROR',\n        payload: message\n      });\n      toast.error(message);\n    }\n  };\n\n  // Share document\n  const shareDocument = async (id, email, permission) => {\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n    try {\n      const res = await axios.post(`/api/documents/${id}/share`, {\n        email,\n        permission\n      });\n      dispatch({\n        type: 'SHARE_DOCUMENT_SUCCESS',\n        payload: res.data.data\n      });\n      toast.success(res.data.message);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response7, _error$response7$data;\n      const message = ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.message) || 'Failed to share document';\n      dispatch({\n        type: 'SET_ERROR',\n        payload: message\n      });\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n\n  // Remove collaborator\n  const removeCollaborator = async (documentId, userId) => {\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n    try {\n      const res = await axios.delete(`/api/documents/${documentId}/share/${userId}`);\n      dispatch({\n        type: 'SHARE_DOCUMENT_SUCCESS',\n        payload: res.data.data\n      });\n      toast.success(res.data.message);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response8, _error$response8$data;\n      const message = ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.message) || 'Failed to remove collaborator';\n      dispatch({\n        type: 'SET_ERROR',\n        payload: message\n      });\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n\n  // Get document versions\n  const getDocumentVersions = async id => {\n    try {\n      const res = await axios.get(`/api/documents/${id}/versions`);\n      return {\n        success: true,\n        versions: res.data.data\n      };\n    } catch (error) {\n      var _error$response9, _error$response9$data;\n      const message = ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : (_error$response9$data = _error$response9.data) === null || _error$response9$data === void 0 ? void 0 : _error$response9$data.message) || 'Failed to fetch versions';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n\n  // Restore document version\n  const restoreVersion = async (documentId, versionId) => {\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n    try {\n      const res = await axios.post(`/api/documents/${documentId}/restore/${versionId}`);\n      dispatch({\n        type: 'UPDATE_DOCUMENT_SUCCESS',\n        payload: res.data.data\n      });\n      toast.success(res.data.message);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response0, _error$response0$data;\n      const message = ((_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : (_error$response0$data = _error$response0.data) === null || _error$response0$data === void 0 ? void 0 : _error$response0$data.message) || 'Failed to restore version';\n      dispatch({\n        type: 'SET_ERROR',\n        payload: message\n      });\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n\n  // Clear current document\n  const clearCurrentDocument = () => {\n    dispatch({\n      type: 'CLEAR_CURRENT_DOCUMENT'\n    });\n  };\n  const value = {\n    documents: state.documents,\n    currentDocument: state.currentDocument,\n    loading: state.loading,\n    error: state.error,\n    pagination: state.pagination,\n    getDocuments,\n    getDocument,\n    createDocument,\n    updateDocument,\n    deleteDocument,\n    searchDocuments,\n    shareDocument,\n    removeCollaborator,\n    getDocumentVersions,\n    restoreVersion,\n    clearCurrentDocument\n  };\n  return /*#__PURE__*/_jsxDEV(DocumentContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 10\n  }, this);\n};\n_s(DocumentProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = DocumentProvider;\nexport const useDocument = () => {\n  _s2();\n  const context = useContext(DocumentContext);\n  if (!context) {\n    throw new Error('useDocument must be used within a DocumentProvider');\n  }\n  return context;\n};\n_s2(useDocument, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"DocumentProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","axios","toast","jsxDEV","_jsxDEV","DocumentContext","initialState","documents","currentDocument","loading","error","pagination","current","pages","hasNext","hasPrev","documentReducer","state","action","type","payload","data","map","doc","_id","filter","DocumentProvider","children","_s","dispatch","getDocuments","page","limit","res","get","_error$response","_error$response$data","message","response","getDocument","id","_error$response2","_error$response2$data","createDocument","formData","post","success","document","_error$response3","_error$response3$data","updateDocument","put","_error$response4","_error$response4$data","deleteDocument","delete","_error$response5","_error$response5$data","searchDocuments","query","encodeURIComponent","_error$response6","_error$response6$data","shareDocument","email","permission","_error$response7","_error$response7$data","removeCollaborator","documentId","userId","_error$response8","_error$response8$data","getDocumentVersions","versions","_error$response9","_error$response9$data","restoreVersion","versionId","_error$response0","_error$response0$data","clearCurrentDocument","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useDocument","_s2","context","Error","$RefreshReg$"],"sources":["/Users/ranbirsingh/Desktop/figga cloud labs project/frontend/src/contexts/DocumentContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\n\nconst DocumentContext = createContext();\n\nconst initialState = {\n  documents: [],\n  currentDocument: null,\n  loading: false,\n  error: null,\n  pagination: {\n    current: 1,\n    pages: 1,\n    hasNext: false,\n    hasPrev: false,\n  },\n};\n\nconst documentReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload,\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n      };\n    case 'GET_DOCUMENTS_SUCCESS':\n      return {\n        ...state,\n        documents: action.payload.data,\n        pagination: action.payload.pagination,\n        loading: false,\n        error: null,\n      };\n    case 'GET_DOCUMENT_SUCCESS':\n      return {\n        ...state,\n        currentDocument: action.payload,\n        loading: false,\n        error: null,\n      };\n    case 'CREATE_DOCUMENT_SUCCESS':\n      return {\n        ...state,\n        documents: [action.payload, ...state.documents],\n        currentDocument: action.payload,\n        loading: false,\n        error: null,\n      };\n    case 'UPDATE_DOCUMENT_SUCCESS':\n      return {\n        ...state,\n        documents: state.documents.map(doc =>\n          doc._id === action.payload._id ? action.payload : doc\n        ),\n        currentDocument: action.payload,\n        loading: false,\n        error: null,\n      };\n    case 'DELETE_DOCUMENT_SUCCESS':\n      return {\n        ...state,\n        documents: state.documents.filter(doc => doc._id !== action.payload),\n        currentDocument: null,\n        loading: false,\n        error: null,\n      };\n    case 'SEARCH_DOCUMENTS_SUCCESS':\n      return {\n        ...state,\n        documents: action.payload.data,\n        loading: false,\n        error: null,\n      };\n    case 'SHARE_DOCUMENT_SUCCESS':\n      return {\n        ...state,\n        currentDocument: action.payload,\n        loading: false,\n        error: null,\n      };\n    case 'CLEAR_CURRENT_DOCUMENT':\n      return {\n        ...state,\n        currentDocument: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const DocumentProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(documentReducer, initialState);\n\n  // Get all documents\n  const getDocuments = async (page = 1, limit = 10) => {\n    dispatch({ type: 'SET_LOADING', payload: true });\n    try {\n      const res = await axios.get(`/api/documents?page=${page}&limit=${limit}`);\n      dispatch({\n        type: 'GET_DOCUMENTS_SUCCESS',\n        payload: {\n          data: res.data.data,\n          pagination: res.data.pagination,\n        },\n      });\n    } catch (error) {\n      const message = error.response?.data?.message || 'Failed to fetch documents';\n      dispatch({ type: 'SET_ERROR', payload: message });\n      toast.error(message);\n    }\n  };\n\n  // Get single document\n  const getDocument = async (id) => {\n    dispatch({ type: 'SET_LOADING', payload: true });\n    try {\n      const res = await axios.get(`/api/documents/${id}`);\n      dispatch({ type: 'GET_DOCUMENT_SUCCESS', payload: res.data.data });\n    } catch (error) {\n      const message = error.response?.data?.message || 'Failed to fetch document';\n      dispatch({ type: 'SET_ERROR', payload: message });\n      toast.error(message);\n    }\n  };\n\n  // Create document\n  const createDocument = async (formData) => {\n    dispatch({ type: 'SET_LOADING', payload: true });\n    try {\n      const res = await axios.post('/api/documents', formData);\n      dispatch({ type: 'CREATE_DOCUMENT_SUCCESS', payload: res.data.data });\n      toast.success('Document created successfully!');\n      return { success: true, document: res.data.data };\n    } catch (error) {\n      const message = error.response?.data?.message || 'Failed to create document';\n      dispatch({ type: 'SET_ERROR', payload: message });\n      toast.error(message);\n      return { success: false, message };\n    }\n  };\n\n  // Update document\n  const updateDocument = async (id, formData) => {\n    dispatch({ type: 'SET_LOADING', payload: true });\n    try {\n      const res = await axios.put(`/api/documents/${id}`, formData);\n      dispatch({ type: 'UPDATE_DOCUMENT_SUCCESS', payload: res.data.data });\n      toast.success('Document updated successfully!');\n      return { success: true, document: res.data.data };\n    } catch (error) {\n      const message = error.response?.data?.message || 'Failed to update document';\n      dispatch({ type: 'SET_ERROR', payload: message });\n      toast.error(message);\n      return { success: false, message };\n    }\n  };\n\n  // Delete document\n  const deleteDocument = async (id) => {\n    dispatch({ type: 'SET_LOADING', payload: true });\n    try {\n      await axios.delete(`/api/documents/${id}`);\n      dispatch({ type: 'DELETE_DOCUMENT_SUCCESS', payload: id });\n      toast.success('Document deleted successfully!');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.message || 'Failed to delete document';\n      dispatch({ type: 'SET_ERROR', payload: message });\n      toast.error(message);\n      return { success: false, message };\n    }\n  };\n\n  // Search documents\n  const searchDocuments = async (query) => {\n    dispatch({ type: 'SET_LOADING', payload: true });\n    try {\n      const res = await axios.get(`/api/documents/search?q=${encodeURIComponent(query)}`);\n      dispatch({ type: 'SEARCH_DOCUMENTS_SUCCESS', payload: res.data });\n    } catch (error) {\n      const message = error.response?.data?.message || 'Search failed';\n      dispatch({ type: 'SET_ERROR', payload: message });\n      toast.error(message);\n    }\n  };\n\n  // Share document\n  const shareDocument = async (id, email, permission) => {\n    dispatch({ type: 'SET_LOADING', payload: true });\n    try {\n      const res = await axios.post(`/api/documents/${id}/share`, { email, permission });\n      dispatch({ type: 'SHARE_DOCUMENT_SUCCESS', payload: res.data.data });\n      toast.success(res.data.message);\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.message || 'Failed to share document';\n      dispatch({ type: 'SET_ERROR', payload: message });\n      toast.error(message);\n      return { success: false, message };\n    }\n  };\n\n  // Remove collaborator\n  const removeCollaborator = async (documentId, userId) => {\n    dispatch({ type: 'SET_LOADING', payload: true });\n    try {\n      const res = await axios.delete(`/api/documents/${documentId}/share/${userId}`);\n      dispatch({ type: 'SHARE_DOCUMENT_SUCCESS', payload: res.data.data });\n      toast.success(res.data.message);\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.message || 'Failed to remove collaborator';\n      dispatch({ type: 'SET_ERROR', payload: message });\n      toast.error(message);\n      return { success: false, message };\n    }\n  };\n\n  // Get document versions\n  const getDocumentVersions = async (id) => {\n    try {\n      const res = await axios.get(`/api/documents/${id}/versions`);\n      return { success: true, versions: res.data.data };\n    } catch (error) {\n      const message = error.response?.data?.message || 'Failed to fetch versions';\n      toast.error(message);\n      return { success: false, message };\n    }\n  };\n\n  // Restore document version\n  const restoreVersion = async (documentId, versionId) => {\n    dispatch({ type: 'SET_LOADING', payload: true });\n    try {\n      const res = await axios.post(`/api/documents/${documentId}/restore/${versionId}`);\n      dispatch({ type: 'UPDATE_DOCUMENT_SUCCESS', payload: res.data.data });\n      toast.success(res.data.message);\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.message || 'Failed to restore version';\n      dispatch({ type: 'SET_ERROR', payload: message });\n      toast.error(message);\n      return { success: false, message };\n    }\n  };\n\n  // Clear current document\n  const clearCurrentDocument = () => {\n    dispatch({ type: 'CLEAR_CURRENT_DOCUMENT' });\n  };\n\n  const value = {\n    documents: state.documents,\n    currentDocument: state.currentDocument,\n    loading: state.loading,\n    error: state.error,\n    pagination: state.pagination,\n    getDocuments,\n    getDocument,\n    createDocument,\n    updateDocument,\n    deleteDocument,\n    searchDocuments,\n    shareDocument,\n    removeCollaborator,\n    getDocumentVersions,\n    restoreVersion,\n    clearCurrentDocument,\n  };\n\n  return <DocumentContext.Provider value={value}>{children}</DocumentContext.Provider>;\n};\n\nexport const useDocument = () => {\n  const context = useContext(DocumentContext);\n  if (!context) {\n    throw new Error('useDocument must be used within a DocumentProvider');\n  }\n  return context;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}